{"version":3,"sources":["redux/todo-reducer.js","common/delete.jsx","components/utils/validators.js","common/FormControls.jsx","components/element/ElementForm.jsx","components/element/Element.jsx","components/WrapperForElements/WrapperForElements.jsx","App.js","serviceWorker.js","redux/store.js","index.js","components/WrapperForElements/WrapperForElements.module.css","images/delete-icon.svg","images/delete-icon-dark.svg","components/element/element.module.css"],"names":["initialState","items","id","heading","checkboxes","darkColor","todoReducer","state","action","type","length","filter","n","map","payload","item","message","newCheckboxText","active","m","DeleteImage","props","src","dark","deleteImageDark","deleteImage","alt","required","value","FormControl","meta","touched","error","children","hasError","className","s","Textarea","input","restProps","ElementForm","onSubmit","handleSubmit","c","checkBox_item","key","Field","component","name","itemId","onChange","checkedNewPost","htmlFor","checkBox_item_checked","checkBox_delete","onClick","deleteThisCheck","textareaDiv","autoFocus","placeholder","validate","textareaButton","Element","editHeading","activateEditHeading","setState","deactivateEditHeading","headText","updateHeading","onStatusChange","e","currentTarget","addNewCheckbox","values","addCheckBox","checkedPost","deleteCheck","deleteElem","deleteItem","prevProps","this","ElementReduxForm","reduxForm","form","darkElem","delete","onDoubleClick","onBlur","React","Component","connect","todo","addItem","changeColor","wrapper","darkWrapper","fixedElement","newElem","colorChange","document","body","style","Boolean","window","location","hostname","match","reducers","combineReducers","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","module","exports"],"mappings":"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","file":"static/js/main.33cbce40.chunk.js","sourcesContent":["const ADD_CHECKBOX = 'ADD_CHECKBOX';\r\nconst CHECKED_POST = 'CHECKED_POST';\r\nconst DELETE_CHECKBOX = 'DELETE_CHECKBOX';\r\nconst UPDATE_HEADING = 'UPDATE_HEADING';\r\nconst ADD_ITEM = 'ADD_ITEM';\r\nconst DELETE_ITEM = 'DELETE_ITEM';\r\nconst CHANGE_COLOR = 'CHANGE_COLOR'\r\n\r\nlet initialState = {\r\n    items: [\r\n        {\r\n            id: 0,\r\n            heading: 'New Item',\r\n            checkboxes: []\r\n        }\r\n    ],\r\n    darkColor: false\r\n};\r\n\r\nconst todoReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case ADD_ITEM: {\r\n            return {\r\n                ...state,\r\n                items: [...state.items,\r\n                    { id: state.items.length === 0 ? 0 : state.items[state.items.length - 1].id + 1, heading: 'New Item', checkboxes: [] }]\r\n            }\r\n        }\r\n\r\n        case DELETE_ITEM: {\r\n            return {\r\n                ...state,\r\n                items: state.items.filter(n => n.id !== action.id)\r\n            }\r\n        }\r\n\r\n        case ADD_CHECKBOX: {\r\n            return {\r\n                ...state,\r\n                items : state.items.map(n => n.id === action.payload.item\r\n            ? {\r\n                    ...n,\r\n                    checkboxes: [...n.checkboxes,\r\n                        {\r\n                            id: state.items[n.id].checkboxes.length === 0 ? 0 : n.checkboxes[state.items[n.id].checkboxes.length - 1].id + 1, message: action.payload.newCheckboxText, active: false\r\n                        }]\r\n                }\r\n            : n)\r\n            }\r\n        }\r\n\r\n        case CHECKED_POST: {\r\n            return {\r\n                ...state,\r\n                items: state.items.map(n => n.id === action.payload.item\r\n                ? { ...n,\r\n                        checkboxes: n.checkboxes.map(m => m.id === action.payload.id\r\n                            ? { ...m, active: !m.active }\r\n                            : m\r\n                        )\r\n                  }\r\n                : n  )\r\n            }\r\n        }\r\n\r\n        case DELETE_CHECKBOX: {\r\n            return {\r\n                ...state,\r\n                items: state.items.map(n => n.id === action.payload.item\r\n                    ? { ...n,\r\n                        checkboxes: n.checkboxes.filter(n => n.id !== action.payload.id)\r\n                    }\r\n                    : n  )\r\n            }\r\n        }\r\n\r\n        case UPDATE_HEADING: {\r\n            return {\r\n                ...state,\r\n                items: state.items.map(n => n.id === action.payload.id\r\n                    ? {...n, heading: action.payload.heading}\r\n                    : n\r\n                )\r\n            }\r\n        }\r\n\r\n        case CHANGE_COLOR: {\r\n            return {\r\n                ...state,\r\n                darkColor: !state.darkColor\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const addCheckBox = (item, newCheckboxText) => ({type: ADD_CHECKBOX, payload: {item, newCheckboxText}});\r\nexport const checkedPost = (item, id) => ({type: CHECKED_POST, payload: {item, id}});\r\nexport const deleteCheck = (item, id) => ({type: DELETE_CHECKBOX, payload: {item, id}});\r\nexport const updateHeading = (heading, id) => ({type: UPDATE_HEADING, payload: {heading, id}});\r\nexport const addItem = () => ({type: ADD_ITEM});\r\nexport const deleteItem = (id) => ({type: DELETE_ITEM, id});\r\nexport const changeColor = () => ({type: CHANGE_COLOR})\r\n\r\nexport default todoReducer","import React from \"react\";\r\nimport deleteImage from './../images/delete-icon.svg'\r\nimport deleteImageDark from './../images/delete-icon-dark.svg'\r\n\r\nconst DeleteImage = (props) => {\r\n    return <img src={(props.dark ? deleteImageDark : deleteImage)} alt={'delete'}/>\r\n}\r\n\r\nexport default DeleteImage","export const required = (value) => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}","import React from \"react\";\r\nimport s from './../components/element/element.module.css'\r\n\r\nconst FormControl = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span className={s.error}>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}","import s from \"./element.module.css\";\r\nimport {Field} from \"redux-form\";\r\nimport DeleteImage from \"../../common/delete\";\r\nimport React from \"react\";\r\nimport {required} from \"../utils/validators\";\r\nimport {Textarea} from \"../../common/FormControls\";\r\n\r\nconst ElementForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            {\r\n                props.checkboxes.map ( c => {\r\n\r\n                    return (\r\n                        <div className={s.checkBox_item} key={c.id}>\r\n                            <Field component='input'\r\n                                   type='checkbox'\r\n                                   name={`${props.itemId}_${ c.id }`}\r\n                                   id={`${props.itemId}_${ c.id }`}\r\n                                   onChange={() => props.checkedNewPost(c.id)} />\r\n                            <label htmlFor={`${props.itemId}_${c.id}`} className={`${(c.active ? s.checkBox_item_checked : null)}`}>\r\n                                { c.message }\r\n                            </label>\r\n                            <div className={s.checkBox_delete} onClick={() => props.deleteThisCheck(c.id)}>\r\n                                <DeleteImage dark={props.dark}/>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            <div className={s.textareaDiv} autoFocus={true}>\r\n                <Field component={Textarea}\r\n                       placeholder='Enter what are you need to do'\r\n                       name='newCheckboxText'\r\n                       validate={[required]} />\r\n                <button className={s.textareaButton}>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ElementForm","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {addCheckBox, checkedPost, deleteCheck, deleteItem, updateHeading} from \"../../redux/todo-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport s from './element.module.css'\r\nimport DeleteImage from \"../../common/delete\";\r\nimport ElementForm from \"./ElementForm\";\r\n\r\n\r\nclass Element extends React.Component {\r\n    state = {\r\n        editHeading: false,\r\n        heading: this.props.item.heading\r\n    };\r\n\r\n    activateEditHeading = () => {\r\n        this.setState({\r\n            editHeading: true\r\n        });\r\n    };\r\n\r\n    deactivateEditHeading = () => {\r\n        this.setState({\r\n            editHeading: false\r\n        });\r\n        let headText = this.state.heading\r\n        if (headText.length === 0) {\r\n            headText = 'This input is required'\r\n        }\r\n        this.props.updateHeading(headText, this.props.item.id);\r\n    };\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n        if (prevProps.item.heading !== this.props.item.heading) {\r\n            this.setState({\r\n                heading: this.props.item.heading\r\n            });\r\n        }\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            heading: e.currentTarget.value\r\n        });\r\n    };\r\n\r\n    addNewCheckbox = (values) => {\r\n        this.props.addCheckBox(this.props.item.id, values.newCheckboxText)\r\n    };\r\n\r\n    checkedNewPost = (id) => {\r\n        this.props.checkedPost(this.props.item.id, id)\r\n    };\r\n\r\n    deleteThisCheck = (id) => {\r\n        this.props.deleteCheck(this.props.item.id, id)\r\n    };\r\n\r\n    deleteElem = (id) => {\r\n        this.props.deleteItem(id)\r\n    };\r\n\r\n    render() {\r\n\r\n        let ElementReduxForm = reduxForm({form: `form_${this.props.item.id}`})(ElementForm);\r\n\r\n        const { id, heading, checkboxes } = this.props.item;\r\n\r\n        return (\r\n            <div className={`${s.item} ${(this.props.darkColor\r\n                                                        ? s.darkElem\r\n                                                        : null)}`}>\r\n                <div className={s.delete} onClick={() => this.deleteElem(id)}><DeleteImage dark={this.props.darkColor}/></div>\r\n                {!this.state.editHeading &&\r\n                    <h2 onDoubleClick={ this.activateEditHeading}>{heading}</h2>\r\n                }\r\n                {this.state.editHeading &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange}\r\n                               autoFocus={true}\r\n                               onBlur={this.deactivateEditHeading}\r\n                               value={this.state.heading}\r\n                        type={'text'}/>\r\n                    </div>\r\n                }\r\n                <hr />\r\n                <ElementReduxForm deleteThisCheck={this.deleteThisCheck}\r\n                                  checkedNewPost={this.checkedNewPost}\r\n                                  checkboxes={checkboxes}\r\n                                  onSubmit={ this.addNewCheckbox }\r\n                                  itemId={this.props.item.id}\r\n                                  dark={this.props.darkColor} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    darkColor: state.todo.darkColor\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {addCheckBox, checkedPost, deleteCheck, updateHeading, deleteItem})(Element)","import React from 'react'\r\nimport Element from \"../element/Element\";\r\nimport {connect} from \"react-redux\";\r\nimport {addItem, changeColor} from \"../../redux/todo-reducer\";\r\nimport s from './WrapperForElements.module.css'\r\nimport DeleteImage from \"../../common/delete\";\r\n\r\nconst WrapperForElements = (props) => {\r\n\r\n    return(\r\n        <div className={`${s.wrapper} ${props.darkColor ? s.darkWrapper : null}`}>\r\n            {\r\n                props.items.map(item => {\r\n                    return <Element item={item} key={item.id}/>\r\n                })\r\n            }\r\n            <div className={s.fixedElement}>\r\n                <button className={s.newElem} onClick={props.addItem}><DeleteImage dark={props.darkColor}/></button>\r\n                <button className={s.colorChange} onClick={props.changeColor}></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    items: state.todo.items,\r\n    darkColor: state.todo.darkColor\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {addItem, changeColor})(WrapperForElements)","import React from 'react';\r\nimport WrapperForElements from \"./components/WrapperForElements/WrapperForElements\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst App = (props) => {\r\n    document.body.style = `${(props.darkColor \r\n                                ? 'background: #222;' \r\n                                : null)}`\r\n  return (\r\n    <>\r\n      <WrapperForElements />\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    darkColor: state.todo.darkColor\r\n})\r\n\r\nexport default connect(mapStateToProps,{})(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {combineReducers, createStore, applyMiddleware, compose} from \"redux\";\r\nimport todoReducer from \"./todo-reducer\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nlet reducers = combineReducers({\r\n    todo: todoReducer,\r\n    form: formReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.store = store;\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"WrapperForElements_wrapper__G9a1I\",\"newElem\":\"WrapperForElements_newElem__3SrjA\",\"fixedElement\":\"WrapperForElements_fixedElement__sF40A\",\"colorChange\":\"WrapperForElements_colorChange__1QcKX\",\"darkWrapper\":\"WrapperForElements_darkWrapper__3jEwq\"};","module.exports = __webpack_public_path__ + \"static/media/delete-icon.53935243.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete-icon-dark.38452350.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"element_item__2Tkfr\",\"textareaDiv\":\"element_textareaDiv__tBB6Q\",\"delete\":\"element_delete__3iGqb\",\"checkBox_delete\":\"element_checkBox_delete__3RMwS\",\"checkBox_item\":\"element_checkBox_item__3XEYK\",\"checkBox_item_checked\":\"element_checkBox_item_checked__32EOw\",\"textareaButton\":\"element_textareaButton___xpK9\",\"darkStyleFont\":\"element_darkStyleFont__2OyIY\",\"darkElem\":\"element_darkElem__VLXXI\",\"error\":\"element_error__A_sT3\",\"wrapper\":\"element_wrapper__rkk1j\"};"],"sourceRoot":""}